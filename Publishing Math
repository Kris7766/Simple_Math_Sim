#include <iostream>
#include <ros/ros.h>
#include <std_msgs/Int8.h>
#include <std_msgs/Char.h>

//Publisher.
ros::Publisher pub_Regnestykke_v1;
ros::Publisher pub_Regnestykke_v2;
ros::Publisher pub_Regnestykke_op1;

//Variabler.
int v1, v2, a = 1, opera;
char op1;

//8bit integer msg navne.
std_msgs::Int8 msg_v1, msg_v2;
std_msgs::Char msg_op1;

//main function.
int main(int argc, char **argv)
{
    ros::init (argc, argv, "Math");
    ros::NodeHandle n;
    pub_Regnestykke_v1 = n.advertise<std_msgs::Int8>("Regnestykke_v1", 10);
    pub_Regnestykke_v2 = n.advertise<std_msgs::Int8>("Regnestykke_v2", 10);
    pub_Regnestykke_op1 = n.advertise<std_msgs::Char>("Regnestykke_op1", 10);

    while (a != 0 && ros::ok())
    {
        std::cout << "\nIndtast første værdi her: ";
        std::cin >> v1;
        std::cout << "\nVælg operation; 1 = +   2 = -   3 = *   4 = / ";
        std::cin >> opera;
        std::cout << "\nIndtast anden værdi her: ";
        std::cin >> v2;

        if (opera == 1)
        {
            op1 = '+';
        }

        else if (opera == 2)
        {
            op1 = '-';
        }

        else if (opera == 3)
        {
            op1 = '*';
        }

        else if (opera == 4)
        {
            op1 = '/';
        }


        msg_v1.data = v1;
        ROS_INFO("%i", msg_v1.data);
        pub_Regnestykke_v1.publish(msg_v1);
        
        msg_v2.data = v2;
        ROS_INFO("%i", msg_v2.data);
        pub_Regnestykke_v2.publish(msg_v2);
        
        msg_op1.data = op1;
        ROS_INFO("%i", msg_op1.data);
        pub_Regnestykke_op1.publish(msg_op1);

        //gør ikke noget, men er god at have hvis man vil tilføje Callback funktioner senere
        //så ville de allerede have en måde at blive tilgået.
        ros::spinOnce();

        //Gør at de programmerne programmer bliver færdige før denne genstarter.
        ros::Duration(1).sleep();

        std::cout << "\nFor at stoppe indtast 0 og alt andet for at fortsætte: ";
        std::cin >> a;
    }

    return 0;
}
